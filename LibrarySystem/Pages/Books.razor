@page "/Books"
@using System.Data.SqlClient
@using LibrarySystem.Shared
@using static LibrarySystem.Shared.DataHandler;

<h3>Books</h3>

<h4>Add Book:</h4>
<div class="row">
    <div class="col-md-4">
        <label>Title</label>
        <input type="text" @bind-value="BookTitle" />
    </div>
    <div class="col-md-4">
        <label>Author</label>
        <input type="text" @bind-value="AuthorName" />
    </div>
    <div class="col-md-4">
        <label>Published</label>
        <input type="text" @bind-value="PublishYear" />
    </div>
    <div class="col-md-4">
        <label>Genre</label>
        <input type="text" @bind-value="Genre" />
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <button class="btn btn-primary" @onclick="SaveData">Save</button>
    </div>
    <div class="col-md-6">
    </div>
</div>

<div class="row">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Book Title</th>
                <th>Author</th>
                <th>Published</th>
                <th>Genre</th>
                <th>Borrowed</th>

            </tr>
        </thead>
        <tbody>
            @if (DataItems != null && DataItems.Count > 0)
            {
                @foreach (var item in DataItems)
                {
                    <tr>
                        <td>@item.BookTitle</td>
                        <td>@item.AuthorName</td>
                        <td>@item.PublishYear</td>
                        <td>@item.Genre</td>
                        <td>@item.Borrowed</td>
                        <td><button class="btn btn-danger" onclick="@(() => ReserveData(item.BookTitle, item.Borrowed))">Reserve</button></td>
                        <td><button class="btn btn-danger" onclick="@(() => DeleteData(item.BookTitle, item.Author_ID, item.PublishYear, item.Genre, item.Borrowed))">Delete</button></td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">No data found.</td>
                </tr>
            }

        </tbody>
    </table>
</div>


@code {
    public string BookTitle { get; set; } = "";
    public int Author_ID { get; set; }

    public int PublishYear { get; set; }
    public string Genre { get; set; }

    public bool Borrowed { get; set; } = false;

    public string AuthorName { get; set; } = "";


    private List<DataItem> DataItems { get; set; }

    private void SaveData()
    {
        var dataHandler = new DataHandler("Server=192.168.23.211,1433;Database=BiblotekDB;User ID=mark;Password=Passw0rd;");
        dataHandler.AddData(BookTitle, Author_ID, PublishYear, Genre, Borrowed, AuthorName);
        DataItems = GetData();
    }

    private void DeleteData(string BookTitle, int Author_ID, int PublishYear, string Genre, bool Borrowed)
    {
        var dataHandler = new DataHandler("Server=192.168.23.211,1433;Database=BiblotekDB;User ID=mark;Password=Passw0rd;");
        dataHandler.DeleteData(BookTitle, Author_ID, PublishYear, Genre, Borrowed);
        DataItems = GetData();
        StateHasChanged();
    }

    private void ReserveData(string BookTitle, bool Borrowed)
    {
        var dataHandler = new DataHandler("Server=192.168.23.211,1433;Database=BiblotekDB;User ID=mark;Password=Passw0rd;");
        dataHandler.ReserveData(BookTitle, Borrowed);
        DataItems = GetData();
        StateHasChanged();
    }
    private List<DataItem> GetData()
    {
        var dataHandler = new DataHandler("Server=192.168.23.211,1433;Database=BiblotekDB;User ID=mark;Password=Passw0rd;");
        return dataHandler.GetData();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        DataItems = GetData();
    }
}
